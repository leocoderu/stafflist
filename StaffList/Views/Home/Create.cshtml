@model StaffList.Models.CreateViewModel

@{
    ViewBag.Title = "Create new employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>Добавление нового сотрудника</h4>
@Html.AntiForgeryToken()
@if (ViewBag.Message != null) {
    <div class="text-success">
        @ViewBag.Message
    </div>
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.Emp.Login, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.Login, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.Login, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="top:5px;">

                <span>женский </span>@Html.RadioButtonFor(m => m.Emp.Gender, false)
                <span>мужской </span>@Html.RadioButtonFor(m => m.Emp.Gender, true)
                @Html.ValidationMessageFor(m => m.Emp.Gender, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.EnterDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{ //if (@Model.EnterDate == null) { @Model.EnterDate = DateTime.Now.Date; }
                }
                @Html.EditorFor(m => m.Emp.EnterDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.EnterDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.LeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.LeaveDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.Automobile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(m => m.Emp.Automobile)
                    @Html.ValidationMessageFor(m => m.Emp.Automobile, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.Married, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(m => m.Emp.Married)
                    @Html.ValidationMessageFor(m => m.Emp.Married, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(m => m.Departments.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(m => m, Model.Departments[0].Name, "")
            </div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.PosUser.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(m => m.DepUser.Id, Model.DepUser.Departments, "")*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.EMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.EMail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.EMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Emp.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.Emp.Comments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(m => m.Emp.Comments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться к списку", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
